/* CVS $Id: $ */
package de.tudresden.bau.cib.vl.core.model.ontology.vocabulary; 
import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.ontology.*;
 
/**
 * Vocabulary definitions from file:resources/eeBIMInterfaceOnto.rdf 
 * @author Auto-generated by schemagen on 31 Mrz 2014 20:37 
 */
public class EBIMInterfaceOntoVocabulary {
    /** <p>The ontology model that holds the vocabulary terms</p> */
    private static OntModel m_model = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM, null );
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://openeebim.bau.tu-dresden.de/dev/ontology/eBIMInterfaceOnto#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    

    // Vocabulary properties
    ///////////////////////////

    public static final ObjectProperty HAS_ADJACENT_ROOM = m_model.createObjectProperty( NS+"hasAdjacentRoom" );
    
    public static final ObjectProperty HAS_ASSOCIATED_CLIMATE = m_model.createObjectProperty( NS+"hasAssociatedClimate" );
    
    public static final ObjectProperty HAS_ASSOCIATED_INDOOR_CLIMATE = m_model.createObjectProperty( NS+"hasAssociatedIndoorClimate" );
    
    public static final ObjectProperty HAS_ASSOCIATED_OUTDOOR_CLIMATE = m_model.createObjectProperty( NS+"hasAssociatedOutdoorClimate" );
    

    // Vocabulary classes
    ///////////////////////////

    public static final OntClass ABSORPTANCE = m_model.createClass( NS+"Absorptance" );
    
    public static final OntClass ATTIC = m_model.createClass( NS+"Attic" );
    
    public static final OntClass BUILDING_ENVELOPE = m_model.createClass( NS+"BuildingEnvelope" );
    
    public static final OntClass CELLAR = m_model.createClass( NS+"Cellar" );
    
    public static final OntClass CELLAR_SEPERATING_SLAB_STANDARD_CASE = m_model.createClass( NS+"CellarSeperatingSlabStandardCase" );
    
    public static final OntClass DOOR_STANDARD_CASE = m_model.createClass( NS+"DoorStandardCase" );
    
    public static final OntClass EMITTANCE = m_model.createClass( NS+"Emittance" );
    
    public static final OntClass FACADE_ELEMENT_STANDARD_CASE = m_model.createClass( NS+"FacadeElementStandardCase" );
    
    public static final OntClass FACADE_STANDARD_CASE = m_model.createClass( NS+"FacadeStandardCase" );
    
    public static final OntClass INDOOR_WINDOW_STANDARD_CASE = m_model.createClass( NS+"IndoorWindowStandardCase" );
    
    public static final OntClass LIVING_ROOM = m_model.createClass( NS+"LivingRoom" );
    
    public static final OntClass MASS_DENSITY = m_model.createClass( NS+"MassDensity" );
    
    public static final OntClass MATERIAL_PROPERTIES = m_model.createClass( NS+"MaterialProperties" );
    
    public static final OntClass OUTDOOR_SLAB_STANDARD_CASE = m_model.createClass( NS+"OutdoorSlabStandardCase" );
    
    public static final OntClass OUTDOOR_WALL_SOIL_ADJACENCY_STANDARD_CASE = m_model.createClass( NS+"OutdoorWallSoilAdjacencyStandardCase" );
    
    public static final OntClass OUTDOOR_WALL_STANDARD_CASE = m_model.createClass( NS+"OutdoorWallStandardCase" );
    
    public static final OntClass OUTDOOR_WINDOW_STANDARD_CASE = m_model.createClass( NS+"OutdoorWindowStandardCase" );
    
    public static final OntClass PASSAGE = m_model.createClass( NS+"Passage" );
    
    public static final OntClass R_VALUE = m_model.createClass( NS+"R-Value" );
    
    public static final OntClass REFLECTANCE = m_model.createClass( NS+"Reflectance" );
    
    public static final OntClass REL_ROOM_ADJACENCY = m_model.createClass( NS+"RelRoomAdjacency" );
    
    public static final OntClass RESISTENCE = m_model.createClass( NS+"Resistence" );
    
    public static final OntClass ROOF_SEPERATING_SLAB_STANDARD_CASE = m_model.createClass( NS+"RoofSeperatingSlabStandardCase" );
    
    public static final OntClass ROOF_STANDARD_CASE = m_model.createClass( NS+"RoofStandardCase" );
    
    public static final OntClass ROOM = m_model.createClass( NS+"Room" );
    
    public static final OntClass ROOM_SEPERATING_SLAB_STANDARD_CASE = m_model.createClass( NS+"RoomSeperatingSlabStandardCase" );
    
    public static final OntClass ROUGHNESS = m_model.createClass( NS+"Roughness" );
    
    public static final OntClass SEPERATING_WALL_STANDARD_CASE = m_model.createClass( NS+"SeperatingWallStandardCase" );
    
    public static final OntClass SLAB_STANDARD_CASE = m_model.createClass( NS+"SlabStandardCase" );
    
    public static final OntClass SOIL_SEPERATING_SLAB_STANDARD_CASE = m_model.createClass( NS+"SoilSeperatingSlabStandardCase" );
    
    public static final OntClass SOLAR_ABSORPTANCE = m_model.createClass( NS+"SolarAbsorptance" );
    
    public static final OntClass SPECIFIC_HEAT_CAPACITY = m_model.createClass( NS+"SpecificHeatCapacity" );
    
    public static final OntClass STAIRWELL_WALL_STANDARD_CASE = m_model.createClass( NS+"StairwellWallStandardCase" );
    
    public static final OntClass STORAGE = m_model.createClass( NS+"Storage" );
    
    public static final OntClass TECHNICAL_ROOM = m_model.createClass( NS+"TechnicalRoom" );
    
    public static final OntClass THERMAL_ABSORPTANCE = m_model.createClass( NS+"ThermalAbsorptance" );
    
    public static final OntClass THERMAL_CONDUCTIVITY = m_model.createClass( NS+"ThermalConductivity" );
    
    public static final OntClass THERMAL_ENVELOPE = m_model.createClass( NS+"ThermalEnvelope" );
    
    public static final OntClass TRANSMITTANCE = m_model.createClass( NS+"Transmittance" );
    
    public static final OntClass U_VALUE = m_model.createClass( NS+"U-Value" );
    
    public static final OntClass VISIBLE_ABSORPTANCE = m_model.createClass( NS+"VisibleAbsorptance" );
    
    public static final OntClass WALL_STANDARD_CASE = m_model.createClass( NS+"WallStandardCase" );
    
    public static final OntClass WINDOW_STANDARD_CASE = m_model.createClass( NS+"WindowStandardCase" );
    
    public static final OntClass WORK_ROOM = m_model.createClass( NS+"WorkRoom" );
    
    public static final OntClass EE_BIMBUILDING_ELEMENT = m_model.createClass( NS+"eeBIMBuildingElement" );
    
    public static final OntClass EE_BIMINTERFACE_ROOT = m_model.createClass( NS+"eeBIMInterfaceRoot" );
    
    public static final OntClass EE_BIMPROPERTY = m_model.createClass( NS+"eeBIMProperty" );
    
    public static final OntClass EE_BIMPROPERTY_SET = m_model.createClass( NS+"eeBIMPropertySet" );
    
    public static final OntClass EE_BIMREL_CONNECTS = m_model.createClass( NS+"eeBIMRelConnects" );
    
    public static final OntClass EE_BIMSPATIAL_STRUCTURE_ELEMENT = m_model.createClass( NS+"eeBIMSpatialStructureElement" );
    
    public static final OntClass EE_BIMSPATIAL_ZONE = m_model.createClass( NS+"eeBIMSpatialZone" );
    
    public static final OntClass EE_BIMTHERMAL_ZONE = m_model.createClass( NS+"eeBIMThermalZone" );
    
    public static final OntClass EE_GENERAL_MATERIAL_PROPERTIES = m_model.createClass( NS+"eeGeneralMaterialProperties" );
    
    public static final OntClass EE_THERMAL_MATERIAL_PROPERTIES = m_model.createClass( NS+"eeThermalMaterialProperties" );
    

    // Vocabulary individuals
    ///////////////////////////

}

/*
@footer@
*/

