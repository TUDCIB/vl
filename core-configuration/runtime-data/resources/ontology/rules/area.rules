// @id: areas @name: Calculate ares rule set @description: Calculates the areas of building elements, building enevelope, building window area and spaces  @end
@prefix ifcOWL: http://openeebim.bau.tu-dresden.de/dev/ontology/ifcOWL#
@prefix eeBIM: http://openeebim.bau.tu-dresden.de/dev/ontology/eeBim#


// initial settings
[removeExistingWindowArea:(?building rdf:type ifcOWL:IfcBuilding) replaceAllWith(?building, eeBIM:windowArea, "0.0"^^http://www.w3.org/2001/XMLSchema#double) -> print(windowArea replaced with "0.0")]
[removeExistingBuildingEnvelopeArea:(?building rdf:type ifcOWL:IfcBuilding) replaceAllWith(?building, eeBIM:buildingEnvelopeArea, "0.0"^^http://www.w3.org/2001/XMLSchema#double) -> print(buildingEnvelopeArea replaced with "0.0")]
[removeExistingDwellingAreas:(?building rdf:type ifcOWL:IfcBuilding) replaceAllWith(?building, eeBIM:dwellingArea, "0.0"^^http://www.w3.org/2001/XMLSchema#double) -> print(dwellingArea replaced with "0.0")]

// Currently important because in the model are only direct rdf:type but we also need the super class information
[buildingElementDerivationA: 	(?a rdf:type ifcOWL:IfcWindow) -> (?a rdf:type ifcOWL:IfcBuildingElement)]
[buildingElementDerivationB: 	(?a rdf:type ifcOWL:IfcWallStandardCase) -> (?a rdf:type ifcOWL:IfcBuildingElement)]
[buildingElementDerivationC: 	(?a rdf:type ifcOWL:IfcColumn) -> (?a rdf:type ifcOWL:IfcBuildingElement)]
[buildingElementDerivationD: 	(?a rdf:type ifcOWL:IfcSlab) -> (?a rdf:type ifcOWL:IfcBuildingElement)]
[buildingElementDerivationE: 	(?a rdf:type ifcOWL:IfcWall) -> (?a rdf:type ifcOWL:IfcBuildingElement)]

// assign areas from PropertySets as direct eeBIM properties -> currently only GrossSideArea
[buildingelementAreas:
			(?relation rdf:type ifcOWL:IfcRelDefinesByProperties)
			(?relation ifcOWL:RelatingPropertyDefinition ?propertyQuantitySet)
			(?propertyQuantitySet ifcOWL:Quantities ?quantityArea)
			(?relation ifcOWL:RelatedObjects ?element)
			(?quantityArea ifcOWL:Name ?labelInst)
			(?labelInst ifcOWL:StringValue "GrossSideArea"^^xsd:string)
			(?quantityArea ifcOWL:AreaValue ?valueInst)
			(?valueInst ifcOWL:FloatValue ?value)
			->
			(?element eeBIM:area ?value)]				

// calculate building window area	
[windowAreas:
			(?window rdf:type ifcOWL:IfcWindow)
			(?window ifcOWL:ProvidesBoundaries ?sb)
			(?sb ifcOWL:Description ?descInst)
			(?descInst ifcOWL:StringValue ?description)
			regex(?description, "2[ab] , #spaceboundary_area=(.*)", ?result)
			strToDouble(?result, ?resValue)
			->
			(?window eeBIM:area ?resValue)]	

[spaceArea:
			(?relation rdf:type ifcOWL:IfcRelDefinesByProperties)
			(?relation ifcOWL:RelatedObjects ?space)
			(?space rdf:type ifcOWL:IfcSpace)		
			(?relation ifcOWL:RelatingPropertyDefinition ?quantitySet)
			(?quantitySet ifcOWL:Quantities ?quantityHeight)
			(?quantityHeight ifcOWL:Name ?labelHeight)
			(?labelHeight ifcOWL:StringValue "FinishCeilingHigh"^^xsd:string)
			(?quantityHeight ifcOWL:LengthValue ?heightInst)
			(?heightInst ifcOWL:FloatValue ?height)
			(?quantitySet ifcOWL:Quantities ?quantityVolume)
			(?quantityVolume ifcOWL:Name ?labelVolume)
			(?labelVolume ifcOWL:StringValue "GrossVolume"^^xsd:string)
			(?quantityVolume ifcOWL:VolumeValue ?volumeInst)
			(?volumeInst ifcOWL:FloatValue ?volume)
			quotient(?volume, ?height, ?area)
			->
			(?space eeBIM:area ?area)]
			
[buildingWindowArea:
			(?building rdf:type ifcOWL:IfcBuilding)
			(?building eeBIM:windowArea ?oldArea)
			(?element rdf:type ifcOWL:IfcWindow)	
			(?element ifcOWL:ProvidesBoundaries ?sb)
			(?sb ifcOWL:IfcInternalOrExternalEnum "EXTERNAL")	
			(?element eeBIM:area ?value)
			sum(?oldArea, ?value, ?newArea)	
			noValue(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot)
			-> 
			remove(1)
			(?building eeBIM:windowArea ?newArea)
			(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot)
			]

// the flag must be deleted because if it is present the area value rule is executed only once
[deleteWindowAreaFlag:
			(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot) 
			-> 
			remove(0) 
			(?building rdf:type ifcOWL:IfcBuilding)]
			
[buildingEnvelopeArea:
			(?building rdf:type ifcOWL:IfcBuilding)
			(?building eeBIM:buildingEnvelopeArea ?oldArea)
			(?element rdf:type ifcOWL:IfcBuildingElement)
//			noValue(?element rdf:type ifcOWL:IfcSlab)
			(?element ifcOWL:ProvidesBoundaries ?sb)
			(?sb ifcOWL:IfcInternalOrExternalEnum "EXTERNAL")		
			(?element eeBIM:area ?value)
			sum(?oldArea, ?value, ?newArea)	
			noValue(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot)
			-> 
			remove(1)
			(?building eeBIM:buildingEnvelopeArea ?newArea)
			(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot)
			]
// the flag must be deleted because if it is present the area value rule is executed only once
[deleteBuildingEnvelopeAreaFlag:
			(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot) 
			-> 
			remove(0) 
			(?building rdf:type ifcOWL:IfcBuilding)]
						
[dwellingArea:
			(?building rdf:type ifcOWL:IfcBuilding)
			(?building eeBIM:dwellingArea ?oldValue)
			(?space rdf:type ifcOWL:IfcSpace)
			(?space eeBIM:area ?area)
			sum(?area, ?oldValue, ?newDwellingArea)
			noValue(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot)
			-> 
			remove(1)
			(?building eeBIM:dwellingArea ?newDwellingArea)
			(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot)
			]

// the flag must be deleted because if it is present the area value rule is executed only once		
[deleteDwellingAreaFlag:
			(?building eeBIM:ruleFiredFor ifcOWL:IfcRoot) 
			-> 
			remove(0) 
			(?building rdf:type ifcOWL:IfcBuilding)]